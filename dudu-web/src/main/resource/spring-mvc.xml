<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- SpringMVC容器中只注册带有@controller注解的Bean -->
    <context:component-scan base-package="com.vincent.duduWeb.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--<mvc:annotation-driven/>-->
    <!--json方案一-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--json方案二-->
    <!--<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/html;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 启动Spring MVC的注解功能，完成请求和注解POJO的映射  &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter" />&lt;!&ndash; json转换器 &ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <mvc:resources location="/WEB-INF/statics/" mapping="/statics/**"/>
    <!--<mvc:default-servlet-handler />-->
    <!--<mvc:resources location="/WEB-INF/statics/js/" mapping="/statics/js/**"/>-->
    <!--<mvc:resources location="/WEB-INF/statics/css/" mapping="/statics/css/**"/>-->

    <!--<mvc:resources location="/WEB-INF/statics/bootstrap/js/" mapping="/statics/bootstrap/js/**"/>-->
    <!--<mvc:resources location="/WEB-INF/statics/bootstrap/css/" mapping="/statics/bootstrap/css/**"/>-->

    <!--全局异常处理-->
    <bean class="com.vincent.duduCore.resolver.ExceptionResolver"/>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- springmvc文件上传需要配置的节点-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20971500"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/**"/>-->
    <!--&lt;!&ndash; 定义在 mvc:interceptor 下面的 Interceptor，表示对特定的请求进行拦截 &ndash;&gt;-->
    <!--<bean class="com.vincent.duduCore.interceptor.ErrorInterceptorV2"/>-->
    <!--</mvc:interceptor>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/**"/>-->
    <!--&lt;!&ndash; 定义在 mvc:interceptor 下面的 Interceptor，表示对特定的请求进行拦截 &ndash;&gt;-->
    <!--<bean class="com.vincent.duduCore.interceptor.ErrorInterceptor"/>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
</beans>